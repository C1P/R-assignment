week-1
c1p
2016年7月3日
1. 计算1~1000 所有整数的倒数的反正切（即arctan）。提示：参考?Trig 帮助页面找到反正切函数
x<-1:1000
  for (i in 1:length(x))
     x[i]<-atan(1/x[i])
 #或
   x<-1:1000
  atan(1/x)
##    [1] 0.7853981634 0.4636476090 0.3217505544 0.2449786631 0.1973955598
##    [6] 0.1651486774 0.1418970546 0.1243549945 0.1106572212 0.0996686525
....

2. 给变量x 分配从1 到1000 的数字向量。计算x 的倒数的反正切值，如第1 题所示，然后
将其分配给变量y。现在逆转此操作，计算y 的正切值的倒数，然后把值赋给变量z
  x<-1:1000
   y<-c() 
   z<-c()
  for (i in 1:length(x))
      y[i]<-atan(1/x[i])
  for(i in 1:length(y))
      z[i]<-1/y[i]
      
##3. 求1+2!+3!+...+20!的和
 x<-1:20
 sum(factorial(x))
## [1] 2.561327e+18
factorial() ##jie cheng
  y<-c() 
  for(i in 1:20)
      y[i]<-factorial(i)
sum(y)
## [1] 2.561327e+18

4.公司采用公用电话传递数据，数据是四位的整数，在传递过程中是加密的，加密规则如下：
每位数字都加上5,然后用和除以10的余数代替该数字，再将第一位和第四位交换，第二位和第三位交换。
编写加密的函数与解密的函数。
x<-c(1,2,3,2)
cd<-function(x){
    z<-(x+5)/10
    z1<-z[1]
    z2<-z[2]
    z3<-z[3]
    z4<-z[4]
    y<-paste(z4,z3,z2,z1)
    print(y)
}
4-2 解密
cd2<-function(x){
    z<-(x*10)-5
    z1<-z[1]
    z2<-z[2]
    z3<-z[3]
    z4<-z[4]
    y<-paste(z4,z3,z2,z1)
    print(y)
}

5.利用海伦公式编写函数求三角形面积，若输入的三边长不能构成三角形，输出相应提示信息
x<-c(1,2,3)
tg<-function(x){
    a<-x[1]
    b<-x[2]
    c<-x[3]
    s=(a+b+c)/2
  if((a+b)>c&(a+c)>b&(b+c)>a&(a-b)<c&(a-c)<b&(b-c)<a)
sqrt(s*(s-a)*(s-b)*(s-c))
    else
        print("error")
}

6.编写函数，求一个不超过五位的十进制整数各位数值的和
sum<-function(x){
if(x<0|x>99999){
    print("error")}
else{
x1<-x%/%10000
x2<-x%/%1000%%10
x3<-x%/%100%%10
x4<-x%/%10%%10
x5<-x%%10
return(x1+x2+x3+x4+x5)
}
}

7. 找出0-100中，不能被2,3,7其中一个或多个整除的所有数
x<-c()
for(i in 1:100){
    if((i%%2)>0&(i%%3)>0&(i%%7)>0){
        x[i]<-i
    }
}
na.omit(x)
##  [1]  1  5 11 13 17 19 23 25 29 31 37 41 43 47 53 55 59 61 65 67 71 73 79
## [24] 83 85 89 95 97
## attr(,"na.action")
##  [1]  2  3  4  6  7  8  9 10 12 14 15 16 18 20 21 22 24 26 27 28 30 32 33
## [24] 34 35 36 38 39 40 42 44 45 46 48 49 50 51 52 54 56 57 58 60 62 63 64
## [47] 66 68 69 70 72 74 75 76 77 78 80 81 82 84 86 87 88 90 91 92 93 94 96
## attr(,"class")
## [1] "omit"

8 函数f(x) 使用R编写函数f(x)。
令x分别等于-2，-1.9，-1.8，……，1.8,1.9,2，计算相应的f(x)值。并根据取值画出函数图象
fx<-function(x){
if(x<=0){
    y<--x^3
}else{
    if(x<=1&x>0){
        y<-x^2
    }else{
        y<-sqrt(x)
    }
}
}
a<-seq(-2,2,0.1)
y<-lapply(a,fx)
y<-unlist(y)
plot(a,y)
  ##9 A<-function(x,n){ a<-1:n y<-sum(x^a)+1 return(y) } ``` ##10
a<-3:5
sum((a/20)^2)
## Warning in if (x < 0 | x > 99999) {: 条件的长度大于一，因此只能用其第一元素
## [1] 0.0225 0.0400 0.0625
11
a<-10:100
sum(a^3+4*(a^2))
## Warning in if (x < 0 | x > 99999) {: 条件的长度大于一，因此只能用其第一元素
##  [1]   5  15   9  20  18  18   8  21  18  14  15   9  20  18  18  17  12
## [18]  27  23  24   9  20  27  18  26  30  18  23  24  18  11  27  18  26
## [35]  30  27  23  33  36  29  18  27  26  21  36  41  33  45  47  36  27
## [52]  44  39  45  50  42  45  56  54  54  44  57  63  50  60  63  56  63
## [69]  81  62  66  81  77  78  81  74  81  99  89  93  81 104  96 108 110
## [86] 108  99 107 120 117 104
a<-1:25
sum((2^a)/a+(3^a)/(a^2))
## Warning in if (x < 0 | x > 99999) {: 条件的长度大于一，因此只能用其第一元素
##  [1] 5.000000e+00 4.250000e+00 5.666667e+00 9.062500e+00 7.120000e+00
##  [6] 3.916667e+00 8.918367e+00 8.515625e+00 2.088889e+01 1.789000e+01
## [11] 1.220661e+01 8.895833e+00 1.101775e+01 2.218878e+01 3.245333e+01
## [16] 3.225391e+01 6.189273e+01 1.298056e+02 3.419557e+02 9.058025e+02
## [21] 2.408156e+03 6.519200e+03 1.784931e+04 4.911806e+04 1.357194e+05

12模拟计算定积分
A<- function(n){
    k <- 0
    x <- runif(n)
    y <- runif(n) * sqrt(2)
    for(i in 1:n){
        if (y[i] <= sqrt(1 + x[i]^2))
            k <- k + 1
    }
    k * sqrt(2) / n
}
A(100000)
## [1] 1.146461
